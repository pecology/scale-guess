{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.ts"],"names":[],"mappings":"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","file":"./dist/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","const FFT_SIZE = 16384 / 2; // 2の累乗\r\n\r\n(document.querySelector(\".start-button\") as HTMLButtonElement).onclick = () => {\r\n    (document.querySelector(\".start-scene\") as HTMLDivElement).style.display = \"none\";\r\n    (document.querySelector(\".game-scene\") as HTMLDivElement).style.display = \"\";\r\n\r\n    const audioCtx = new window.AudioContext();\r\n    const analyser = audioCtx.createAnalyser();\r\n    analyser.minDecibels = -100;\r\n    analyser.maxDecibels = -10;\r\n    analyser.smoothingTimeConstant = 0.5;\r\n\r\n    // ユーザーに音声入力の許可を求める\r\n    const constraints = { audio: true }\r\n    navigator.mediaDevices.getUserMedia(constraints)\r\n        .then(\r\n            function (stream) {\r\n                const source = audioCtx.createMediaStreamSource(stream);\r\n                source.connect(analyser);\r\n\r\n                start();\r\n            })\r\n        .catch(function (err) { console.log('The following gUM error occured: ' + err); })\r\n\r\n    function start() {\r\n        analyser.fftSize = FFT_SIZE;\r\n        const bufferLengthAlt = analyser.frequencyBinCount;\r\n        const dataArrayAlt = new Uint8Array(bufferLengthAlt);\r\n\r\n        let correctAnswerCount = 0;\r\n\r\n        // フレーム単位の処理\r\n        const processFrame = async () => {\r\n            // fftの結果をdataArrayAltに書き込んでもらう\r\n            analyser.getByteFrequencyData(dataArrayAlt);\r\n\r\n            const answer = estimateScale(dataArrayAlt);\r\n\r\n            if (answer.avg <= 30) {\r\n                (document.querySelector(\".answer > span\") as HTMLSpanElement).textContent = \"\";\r\n                requestAnimationFrame(processFrame);\r\n                return;\r\n            }\r\n\r\n            (document.querySelector(\".answer > span\") as HTMLSpanElement).textContent = answer.scale;\r\n\r\n            const question = (document.querySelector(\".question > span\") as HTMLSpanElement).textContent as string;\r\n            if (answer.scale === question) {\r\n                correctAnswerCount++;\r\n            }\r\n\r\n            if (correctAnswerCount >= 30) {\r\n                // 正解の〇を出す\r\n                (document.querySelector(\".circle\") as HTMLDivElement).style.display = \"\";\r\n\r\n                await new Promise((res) => setTimeout(res, 300));\r\n\r\n                // 次の問題\r\n                const currentQuestion = (document.querySelector(\".question > span\") as HTMLSpanElement).textContent;\r\n                let nextQuestion = \"\";\r\n                // 前回とは異なる問題にする\r\n                do {\r\n                    const zeroTo7 = Math.floor(Math.random() * 8);\r\n                    nextQuestion = scaleAndHz[zeroTo7].scale;\r\n                } while (nextQuestion == currentQuestion)\r\n                (document.querySelector(\".question > span\") as HTMLSpanElement).textContent = nextQuestion;\r\n\r\n                // 正解の〇を消す\r\n                correctAnswerCount = 0;\r\n                (document.querySelector(\".circle\") as HTMLDivElement).style.display = \"none\";\r\n            }\r\n\r\n            requestAnimationFrame(processFrame);\r\n        };\r\n        processFrame();\r\n\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst indexToHz: number[] = [];\r\nfor (let i = 0; i < FFT_SIZE; i++) {\r\n    indexToHz.push(i * 44100 / FFT_SIZE);\r\n}\r\n\r\nconst scaleAndHz = [\r\n    { scale: 'C', hz: 261.626 },\r\n    { scale: 'D', hz: 293.665 },\r\n    { scale: 'E', hz: 329.628 },\r\n    { scale: 'F', hz: 349.228 },\r\n    { scale: 'G', hz: 391.995 },\r\n    { scale: 'A', hz: 440.000 },\r\n    { scale: 'B', hz: 493.883 },\r\n    { scale: 'C', hz: 523.251 },\r\n];\r\n\r\n// fftの結果から音程を推定する\r\nconst estimateScale = (dataArrayAlt: Uint8Array) => {\r\n    // ピークを抽出する\r\n    const peaks = [];\r\n    for (let i = 3; i < dataArrayAlt.length - 3; i++) {\r\n        if (dataArrayAlt[i - 3] < dataArrayAlt[i - 2] &&\r\n            dataArrayAlt[i - 2] < dataArrayAlt[i - 1] &&\r\n            dataArrayAlt[i - 1] < dataArrayAlt[i] &&\r\n            dataArrayAlt[i] > dataArrayAlt[i + 1] &&\r\n            dataArrayAlt[i + 1] > dataArrayAlt[i + 2] &&\r\n            dataArrayAlt[i + 2] > dataArrayAlt[i + 3]) {\r\n            peaks.push({ hz: indexToHz[i], value: dataArrayAlt[i] });\r\n        }\r\n    }\r\n\r\n    // 各ピークの周波数を2で割ったり掛けたりして260~525にする。\r\n    const normalizedPeaks = peaks.map(peak => {\r\n        while (peak.hz <= 260) {\r\n            peak.hz *= 2;\r\n        }\r\n\r\n        while (peak.hz >= 525) {\r\n            peak.hz /= 2;\r\n        }\r\n\r\n        return { hz: Math.floor(peak.hz * 100) / 100, value: peak.value };\r\n    });\r\n\r\n    // ピークからスケール(A~Gのどれか)と大きさを抽出する\r\n    const peakScales = normalizedPeaks.map(peak => {\r\n        const abs = scaleAndHz.map((v) => Math.abs(v.hz - peak.hz));\r\n        const minIndex = abs.reduce((minIndex, curr, currI, array) => {\r\n            if (array[minIndex] >= array[currI]) {\r\n                return currI;\r\n            }\r\n            else {\r\n                return minIndex;\r\n            }\r\n        }, 0);\r\n        return { scale: scaleAndHz[minIndex].scale, value: peak.value };\r\n    });\r\n\r\n    // 各ピークから音程を推定する\r\n    // 各音程の大きさの和が一番高いやつを返す\r\n    const candidate: { [key: string]: { scale: string, count: number, avg: number } } = {};\r\n    scaleAndHz.forEach((a) => {\r\n        candidate[a.scale] = { scale: a.scale, count: 0, avg: 0 };\r\n    });\r\n    for (const { scale, value } of peakScales) {\r\n        candidate[scale].count++;\r\n        candidate[scale].avg = (candidate[scale].avg * (candidate[scale].count - 1) + value) / candidate[scale].count;\r\n    }\r\n    const answer = Object.values(candidate).reduce((prev, curr) => {\r\n        if (prev.avg * prev.count < curr.avg * curr.count) {\r\n            return curr;\r\n        }\r\n        else {\r\n            return prev;\r\n        }\r\n    });\r\n    return answer;\r\n}"],"sourceRoot":""}